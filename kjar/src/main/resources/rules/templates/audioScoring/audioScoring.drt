template header
featureName
featureGetterTrack
featureGetterTarget
sourceType
weightField        

package templates.audioScoring

import com.ftn.model.*;

template "Audio Feature Scoring @{featureName}"
rule "audio_feature_@{featureName}"
when
    $spec : ScoringSpecification(@{weightField} != null && @{weightField} > 0)
    $user : User($uid : id)
    $track : Track($tid : id, features != null, $trackVal : features.@{featureGetterTrack}())
    
    $targetVal : Double() from (
        @{sourceType} == "PROFILE_FEATURES" ? 
            ((ProfileRequest($uid == userId, $pid : profileId)) 
                and (Profile(id == $pid, $pf : features))) ?
                    $pf.@{featureGetterTarget}() : 0.0
        : @{sourceType} == "SEED_FEATURES" ?
            ((SeedTrackRequest($uid == userId, $sid : seedTrackId)) 
                and (Track(id == $sid, features != null))) ?
                    features.@{featureGetterTarget}() : 0.0
        : 0.0
    )

    $similarity : Double() from (1.0 - Math.abs($trackVal - $targetVal))
then
    insert(new ScoreComponent(
        $uid,
        $tid,
        ScoreComponent.Source.@{sourceType},
        $similarity * $spec.@{weightField}()
    ));
end
end template
