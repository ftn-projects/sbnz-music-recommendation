template header
featureName
featureGetter

package templates.featureSimilarity

dialect "java"

import com.ftn.model.User;
import com.ftn.model.AudioFeatures;
import com.ftn.model.ScoreComponent;
import com.ftn.model.request.SeedTrackRequest;
import com.ftn.model.specification.ScoringSpecification;
import com.ftn.model.track.Track;
import com.ftn.model.track.TrackCandidate;

template "B5 - Seed feature similarity @{featureName}"

rule "b5_@{featureName}_score" salience 10
when
    $spec : ScoringSpecification( wSeedFeatures != null && wSeedFeatures > 0, $weight : wSeedFeatures )
    $cand : TrackCandidate( $tid : trackId )
    $track : Track( id == $tid, features != null )
    $seedReq : SeedTrackRequest( seedTrackId != null )
    $seed : Track( id == $seedReq.seedTrackId, features != null )
    $trackVal : Double() from ( $track.getFeatures().@{featureGetter}() )
    $seedVal  : Double() from ( $seed.getFeatures().@{featureGetter}() )
    $diff : Double() from ( Math.abs($trackVal - $seedVal) )

    // Calculate weighted negative contribution in when clause
    $weightedScore : Double() from ( (-$diff / 7.0) * $weight )
then
    // When summed with base (1.0 * weight), gives: (1.0 - sum(diffs)/7) * weight
    insert( new ScoreComponent(
        $cand.getUserId(),
        $tid,
        ScoreComponent.Source.SEED_FEATURES,
        $weightedScore
    ) );
end

end template