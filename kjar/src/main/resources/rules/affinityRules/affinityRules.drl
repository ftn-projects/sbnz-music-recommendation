package rules.affinityRules

import java.util.UUID;
import com.ftn.model.track.Track;
import com.ftn.model.User;
import com.ftn.model.track.TrackCandidate;
import com.ftn.model.specification.ScoringSpecification;
import com.ftn.model.request.SeedTrackRequest;
import com.ftn.model.ScoreComponent;
import com.ftn.model.track.RecommendationProposal;

rule "B1 - User taste (custom accumulate, 0 if none)" salience 10
dialect "java"
when
    $spec  : ScoringSpecification( wUserTaste != null && wUserTaste > 0 )
    $tc    : TrackCandidate( $uid : userId, $tid : trackId )
    $user  : User( id == $uid, $prefs : genrePreferences )
    eval( $prefs != null && !$prefs.isEmpty() )
    $track : Track( id == $tid, $gids : genreIds )

    $score : Number() from accumulate(
        $gid : java.util.UUID() from $gids,
        init( double best = Double.NEGATIVE_INFINITY; int cnt = 0; ),
        action( {
            Double p = (Double) $prefs.get($gid);
            if (p != null) { if (p > best) best = p; cnt++; }
        } ),
        result( cnt == 0 ? null : best )
    )
then
    insert( new ScoreComponent(
        $uid, $tid, ScoreComponent.Source.TASTE,
        $score.doubleValue() * $spec.getWUserTaste()
    ) );
end

rule "B4 - Seed track genre similarity scoring" salience 10
when
    $spec : ScoringSpecification( wSeedGenre != null && wSeedGenre > 0 )
    $user : User( $uid : id )
    $candidate : TrackCandidate( userId == $uid, $tid : trackId )
    $track : Track( id == $tid, $genreIds : genreIds )
    $seedReq : SeedTrackRequest( userId == $uid, $seedId : seedTrackId )
    $seedTrack : Track( id == $seedId, $seedGenres : genreIds )

    // Count how many candidate genres are also in the seed track's genres
    $matches : Number() from accumulate(
        $g : java.util.UUID( this memberOf $seedGenres ) from $genreIds,
        count($g)
    )
then
    double denom = ($genreIds != null && !$genreIds.isEmpty()) ? $genreIds.size() : 1.0;
    double similarity = $matches.doubleValue() / denom;

    insert( new ScoreComponent(
        $uid,
        $tid,
        ScoreComponent.Source.SEED_GENRE,
        similarity * $spec.getWSeedGenre()
    ));
end
